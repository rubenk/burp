#!/usr/bin/env bash

print_top()
{
	echo "
<P>
<FONT COLOR="#000000">
<pre>" >> "$1" 
}

print_bottom()
{
	echo "</pre>
</FONT>
</P>
" >> "$1" 
}

start_page()
{
	rm -f "$1"
	print_top "$1"
}

end_page()
{
	echo >> "$1" 
	echo >> "$1" 
	print_bottom "$1"
}

generic_page()
{
	start_page "$1"
	cat "$2" | sed -e 's/</\&lt;/g' -e 's/>/\&gt;/g' >> "$1"
	end_page "$1"
}

mkdir -p content/docs

manpage=content/docs/manpage.content
start_page "$manpage"
echo 'NOTE: The following is the latest version of the man page.
Some features may be different in the version of burp that you are using.

' >> "$manpage"
man ../manpages/burp.8 | col -b | sed -e 's/</\&lt;/g' -e 's/>/\&gt;/g' >> "$manpage"
end_page "$manpage"

quickstart=content/docs/quickstart.content
debugging=content/docs/debugging.content
securitymodels=content/docs/security-models.content
autoupgrade=content/docs/autoupgrade.content
timerscript=content/docs/timer_script.content
workingdir=content/docs/working_dir.content
burp_ca=content/docs/burp_ca.content
serverbasics=content/docs/server-basics.content
baremetal=content/docs/baremetal-windows.content
baremetalhirens=content/docs/baremetal-windows-hirens.content
donations=content/html/donations.content
licence=content/html/licence.content
shuffling=content/docs/shuffling.content
monitor=content/docs/monitor.content
changelog=content/html/changelog.content
contributors=content/html/contributors.content
retention=content/docs/retention.content

generic_page "$quickstart" "../README"
generic_page "$debugging" "../docs/debug.txt"
generic_page "$securitymodels" "../docs/security-models.txt"
generic_page "$autoupgrade" "../docs/autoupgrade.txt"
generic_page "$timerscript" "../docs/timer_script.txt"
generic_page "$workingdir" "../docs/working_dir.txt"
generic_page "$burp_ca" "../docs/burp_ca.txt"
generic_page "$serverbasics" "../docs/server-basics.txt"
generic_page "$baremetal" "../docs/baremetal-windows7and8.txt"
generic_page "$baremetalhirens" "../docs/baremetal-windows7-hirens.txt"
generic_page "$donations" "../DONATIONS"
generic_page "$licence" "../LICENSE"
generic_page "$shuffling" "../docs/shuffling.txt"
generic_page "$monitor" "../docs/status-monitor.txt"
generic_page "$changelog" "../CHANGELOG"
generic_page "$contributors" "../CONTRIBUTORS"
generic_page "$retention" "../docs/retention.txt"

mkdir -p html/txt
cp -v ../docs/*.txt html/txt

go_for_it()
{
	i=$1
	case "$i" in
		*.content)
			file=${i%.content}
			area=file
			;;
		*.html)
			b=$(basename $i)
			cp $i $root/$2/$b
			echo $root/$2/$b
			return
			;;
		*)
			file=${i%.*}
			area=${i#*.}
			;;
	esac
	h=$root/$2/$file.html
	globhuman=
	cat $template | while read line ; do
		if [ "${line:0:1}" = "@" ] ; then
			k=${line#@}
			name=${k%@*}
			name=${name%@*}
			human=${k#*@}
			human=${human%@*}
			header=${line##*@}
			if [ "$k" = "header" ] ; then
				if [ -n "$globhuman" ] ; then
					echo "<H1 ALIGN=CENTER>$globhuman</H1>" >> $h
				fi
			elif [ "$name" = "content" ] ; then
				cat $i >> $h
			elif [ "$name" = "$file" ] ; then
				if [ -n "$human" ] ; then
					echo "<TR><TD ALIGN=RIGHT WIDTH=10% id=\"mainlink\"><b>$human</b></TD></TR>" >> $h
				fi
				globhuman=$header
			else
				echo "<TR><TD ALIGN=RIGHT WIDTH=10%><A HREF=\"/$name.html\" id=\"mainlink\">$human</A></TD></TR>" >> $h
			fi
		else
			echo "$line" >> $h
		fi
	done
	echo $h
}

recurse()
{
	dir=$1
	for i in * ; do
		if [ -d "$i" ] ; then
			local x=$i
			rm -rf $root/$i/*.html
			mkdir -p $root/$i
			cd $i
			recurse $i
			cd ..
			mkdir -p $root/html/$x
			mv $root/$x/*.html $root/html/$x
			if ! [ $x = "html" ] ; then rmdir $root/$x ; fi
		else
			case "$i" in
				*.content|*.howto|*.faq|*.html|*.about|*.contact)
					go_for_it "$i" "$dir"
					;;
				*.template|*.jpg|*.rtf|*.png)
					;;
				"*")
					echo "empty directory."
					;;
				*)
					echo "Don't know what to do with '$i'"
					;;
			esac
		fi
	done
}

root=$(pwd)
template=$(pwd)/content/main.template
cd content
recurse html
mv $root/html/html/* $root/html
rmdir $root/html/html

